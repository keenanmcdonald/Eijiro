# rules to parse:
# item:
# {前}
# meaning:
# 《a 〜》, 《be 〜》, 《the 〜》, etc.
# 〔〕
# （）
# ＿
# 〜
# []

import psycopg2
import re

def parseEntry(line):
    line = line.replace('\n', '')
    item, desc = line.split(' : ')
    note = ''
    examples = []
    see = []

    item = item.replace('■', '')

    if '<→' in desc:
        desc = desc.replace('＝', '')
        for elem in re.findall('<→.+?>', desc):
            see.append(elem.replace('<→', '').replace('>', ''))
        desc = re.sub('<→.+?>', '', desc)
        
    else:
        if '■・' in desc:
            desc, examplesStr = desc.split('■・', 1)
            examples = examplesStr.split('◆')
        if '◆' in desc:
            desc, note = desc.split('◆', 1)

    return {'item': item, 'meaning': desc, 'examples': examples, 'note': note, 'see': see, 'ref': []}

def getRedirectIds(entries):
    for entry in entries:
        if len(entry['see']) >= 1 :
            for item in entry['see']:
                print(item)
                for i in range(0, len(entries)-1):
                    if entries[i] == item:
                        entry['ref'].append(i)

def seed(entries):
    conn = psycopg2.connect('host=localhost dbname=english_school user=postgres')
    cur = conn.cursor()

    cur.execute('''
        DROP TABLE IF EXISTS dict CASCADE; 

        CREATE TABLE dict (
            id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, 
            item TEXT NOT NULL, 
            meaning TEXT, 
            examples TEXT[], 
            note TEXT
        );

        DROP TABLE IF EXISTS ref CASCADE;

        CREATE TABLE ref (
            id INTEGER REFERENCES dict(id) NOT NULL,
            refId INTEGER REFERENCES dict(id) NOT NULL
        )

    ''')

    for entry in entries:
        cur.execute('INSERT INTO dict (item, meaning, examples, note) VALUES (%s, %s, %s, %s)', (entry['item'], entry['meaning'], entry['examples'], entry['note']))
        #if (len(entry['ref']) >= 1):
            #for ref in entry['ref']:
                #cur.execute('INSERT INTO references (id, refId) VALUES (%s, %s)', ())
            

    conn.commit()    



f = open("EIJIRO-1448.TXT", "r+", encoding="shift_jisx0213")

#lines = f.readlines()

lines = []
for i in range(20000):
    lines.append(f.readline())

entries = []

for line in lines:
    entries.append(parseEntry(line))

getRedirectIds(entries)

seed(entries)


'''
for i in range(50000,50100):
    print(entries[i])
'''

